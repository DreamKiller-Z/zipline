name: Zipline CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: ${{ matrix.os }}-${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        name:
          - py27-oldpandas
          # - py35-oldpandas
          - py35-newpandas
          # - py36-newpandas
        include:
          - name: py27-oldpandas
            python-version: 2.7
            constraints-file: constraints_oldpandas.txt
          - name: py35-oldpandas
            python-version: 3.5
            constraints-file: constraints_oldpandas.txt
          - name: py35-newpandas
            python-version: 3.5
            constraints-file: constraints_newpandas.txt
          - name: py36-newpandas
            python-version: 3.6
            constraints-file: constraints_newpandas.txt
    steps:
      - name: Dump Matrix Config
        env:
          MATRIX: ${{ toJson(matrix) }}
        run: echo "$MATRIX"

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore Pip Cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-${{ matrix.name }}-pip-${{ hashFiles('etc/constraints_*.txt') }}

      - name: Install TA-Lib
        run: |
          mkdir ~/talib-build
          cd ~/talib-build
          curl -sSL 'https://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz' > ta-lib.tar.gz
          tar -xzf ta-lib.tar.gz
          cd ta-lib/
          ./configure
          make
          sudo make install
          ldconfig

      - name: Create virtualenv
        run: |
          python -m pip install --user virtualenv
          python -m virtualenv -p python${{ matrix.python-version }} ~/venv

      - name: Install dependencies in virtualenv
        run: |
          source ~/venv/bin/activate
          python -m pip install -r etc/requirements_build.in -c etc/${{ matrix.constraints-file }}
          python -m pip install -e .[all] -r etc/requirements_blaze.in -c etc/${{ matrix.constraints-file }}

      - name: Pip freeze
        run: |
          pip freeze

      - name: Run tests
        run: |
          source ~/venv/bin/activate
          nosetests tests
